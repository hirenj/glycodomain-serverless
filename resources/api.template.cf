{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters" : {
    "exchangetoken" : {
      "Type" : "String",
      "Default" : "test-exchangetoken-1H1ELT3YAMDXB",
      "Description" : "Enter function name for exchangetoken function"
    },
    "datahandler" : {
      "Type" : "String",
      "Default" : "test-datahandler-93F0OU08EKJX",
      "Description" : "Enter function name for dataHandler function"
    },
    "loginhandler" : {
      "Type" : "String",
      "Default" : "test-loginhandler-HBZOMGEME6KI",
      "Description" : "Enter function name for loginhandler function"
    }
  },
  "Resources": {
    "dataApi" : {
      "Type" : "AWS::ApiGateway::RestApi",
      "Properties" : {
        "Description" : "GatorData REST api",
        "Name" : "GatorData REST api"
      }
    },
    "authLoginhandler": {
      "Type": "AWS::ApiGateway::Authorizer",
      "Properties": {
        "AuthorizerResultTtlInSeconds": "300",
        "AuthorizerUri" : { "Fn::Join" :  [ "", [ "arn:aws:apigateway:",{ "Ref" : "AWS::Region" },":lambda:path/2015-03-31/functions/", "arn:aws:lambda:",{ "Ref" : "AWS::Region" },":", { "Ref" : "AWS::AccountId" } , ":function:", { "Ref" : "loginhandler" }, "/invocations" ] ]},
        "Type": "TOKEN",
        "IdentityValidationExpression" : "Bearer [^\\.]+\\.[^\\.]+\\.[^\\.]+",
        "IdentitySource": "method.request.header.Authorization",
        "Name": "Login_authoriser",
        "RestApiId": { "Ref": "dataApi" }
      }
    },
    "authDatahandler": {
      "Type": "AWS::ApiGateway::Authorizer",
      "Properties": {
        "AuthorizerResultTtlInSeconds": "0",
        "AuthorizerUri" : { "Fn::Join" :  [ "", [ "arn:aws:apigateway:",{ "Ref" : "AWS::Region" },":lambda:path/2015-03-31/functions/", "arn:aws:lambda:",{ "Ref" : "AWS::Region" },":", { "Ref" : "AWS::AccountId" } , ":function:", { "Ref" : "datahandler" }, "/invocations" ] ]},
        "Type": "TOKEN",
        "IdentityValidationExpression" : "Bearer [^\\.]+\\.[^\\.]+\\.[^\\.]+",
        "IdentitySource": "method.request.header.Authorization",
        "Name": "Data_access_authoriser",
        "RestApiId": { "Ref": "dataApi" }
      }
    },
    "dataApiLogin" : {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": { "Ref": "dataApi" },
        "ParentId": { "Fn::GetAtt": ["dataApi", "RootResourceId"] },
        "PathPart": "login"
      }
    },
    "dataApiLoginGET": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": { "Ref": "dataApi" },
        "ResourceId": { "Ref" : "dataApiLogin" },
        "HttpMethod": "GET",
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod" : "POST",
          "PassthroughBehavior" : "WHEN_NO_MATCH",
          "RequestParameters" : {},
          "RequestTemplates" : {},
          "IntegrationResponses" : [
          {
            "ResponseParameters" : {},
            "ResponseTemplates" : {},
            "StatusCode" : "200"
          }],
          "Uri" : { "Fn::Join" :  [ "", [ "arn:aws:apigateway:",{ "Ref" : "AWS::Region" },":lambda:path/2015-03-31/functions/", "arn:aws:lambda:",{ "Ref" : "AWS::Region" },":", { "Ref" : "AWS::AccountId" } , ":function:", { "Ref" : "exchangetoken" }, "/invocations" ] ]}
        },
        "MethodResponses" : [{"StatusCode" : 200 }]
      }
    },
    "dataApiExchangetoken" : {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": { "Ref": "dataApi" },
        "ParentId": { "Fn::GetAtt": ["dataApi", "RootResourceId"] },
        "PathPart": "exchangetoken"
      }
    },
    "dataApiExchangetokenPOST": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": { "Ref": "dataApi" },
        "ResourceId": { "Ref" : "dataApiExchangetoken" },
        "HttpMethod": "POST",
        "AuthorizationType": "CUSTOM",
        "AuthorizerId" : { "Ref" : "authLoginhandler" },
        "RequestParameters" : { "method.request.header.Authorization" : true },
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod" : "POST",
          "PassthroughBehavior" : "WHEN_NO_MATCH",
          "RequestParameters" : {},
          "RequestTemplates" : { "application/json" : "{ \"Authorization\" : \"$input.params().header.get('Authorization')\" }"},
          "IntegrationResponses" : [
          {
            "ResponseParameters" : {},
            "ResponseTemplates" : {},
            "StatusCode" : "200"
          }],
          "Uri" : { "Fn::Join" :  [ "", [ "arn:aws:apigateway:",{ "Ref" : "AWS::Region" },":lambda:path/2015-03-31/functions/", "arn:aws:lambda:",{ "Ref" : "AWS::Region" },":", { "Ref" : "AWS::AccountId" } , ":function:", { "Ref" : "exchangetoken" }, "/invocations" ] ]}
        },
        "MethodResponses" : [{"StatusCode" : 200 }]
      }
    }
  }
}