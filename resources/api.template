{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters" : {
    "CFApiGatewayARN" : {
      "Type" : "String",
      "Default" : "arn:aws:lambda:us-east-1:978536629153:function:cf-apigateway-LambdaFunction-1T8GUE2Y3MVDV",
      "Description" : "Enter ARN for API gateway lambda"
    },
    "datahandler" : {
      "Type" : "String",
      "Description" : "Enter function name for dataHandler function"
    },
    "loginhandler" : {
      "Type" : "String",
      "Description" : "Enter function name for loginhandler function"
    },
    "exchangetoken" : {
      "Type" : "String",
      "Description" : "Enter function name for exchangetoken function"
    },
    "acceptWebhook" : {
      "Type" : "String",
      "Description" : "Enter function name for acceptWebhook function"
    },
    "readAllData" : {
      "Type" : "String",
      "Description" : "Enter function name for readAllData function"
    },
    "LambdaReadAllDataRole" : {
      "Type" : "String",
      "Description" : "Role name for LambdaReadAllDataRole"
    },
    "dataBucket" : {
      "Type" : "String",
      "Description" : "Bucket name"
    }
  },
  "Resources": {
    "dataApi" : {
        "Type" : "Custom::RestApi",
        "Properties" : {
            "ServiceToken": { "Ref": "CFApiGatewayARN" },
            "name": "Gatordata API",
            "description": "Gator data API"
        }
    },
    "dataApiLogin" : {
      "Type" : "Custom::ApiResource",
      "Properties" : {
          "ServiceToken": { "Ref": "CFApiGatewayARN" },
          "restApiId": { "Ref" : "dataApi" },
          "parentId": { "Fn::GetAtt" : ["dataApi", "parentResourceId"] },
          "pathPart": "login",
          "corsConfiguration": {
              "allowMethods": ["GET"],
              "allowHeaders": [],
              "allowDefaultHeaders": true,
              "allowOrigin": "*",
              "exposeHeaders": [],
              "maxAge": 1800,
              "allowCredentials": true
           }
      }
    },
    "dataApiLoginGET" : {
        "Type" : "Custom::ApiMethod",
        "Properties" : {
            "ServiceToken": { "Ref": "CFApiGatewayARN" },
            "restApiId": { "Ref" : "dataApi" },
            "resourceId": { "Ref" : "dataApiLogin" },
            "method": {
                "authorizationType": "NONE",
                "httpMethod": "GET"
            },
            "integration": {
                "type": "AWS",
                "httpMethod" : "POST",
                "uri" : { "Fn::Join" :  [ "", [ "arn:aws:apigateway:",{ "Ref" : "AWS::Region" },":lambda:path/2015-03-31/functions/", "arn:aws:lambda:",{ "Ref" : "AWS::Region" },":", { "Ref" : "AWS::AccountId" } , ":function:", { "Ref" : "exchangetoken" }, "/invocations" ] ]}
            },
            "responses": {
                "default": {
                    "statusCode": "200"
                }
            }
        }
    },
    "dataApiLoginPermission": {
        "Type" : "AWS::Lambda::Permission",
        "Properties" : {
            "Action":"lambda:invokeFunction",
            "FunctionName": { "Fn::Join" :  [ "", [ "arn:aws:lambda:",{ "Ref" : "AWS::Region" },":", { "Ref" : "AWS::AccountId" } , ":function:", { "Ref" : "exchangetoken" } ] ]},
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
                "Fn::Join": ["", [
                    "arn:aws:execute-api:", {"Ref" : "AWS::Region" } ,":", {"Ref" : "AWS::AccountId" }, ":", {"Ref" : "dataApi" },
                     "/*/GET/login"]]
                    }
        },
        "DependsOn" : "dataApi"
    },
    "dataApiExchangetoken" : {
      "Type" : "Custom::ApiResource",
      "Properties" : {
          "ServiceToken": { "Ref": "CFApiGatewayARN" },
          "restApiId": { "Ref" : "dataApi" },
          "parentId": { "Fn::GetAtt" : ["dataApi", "parentResourceId"] },
          "pathPart": "exchangetoken"
      }
    },
    "dataApiExchangeTokenPOST" : {
        "Type" : "Custom::ApiMethod",
        "Properties" : {
            "ServiceToken": { "Ref": "CFApiGatewayARN" },
            "restApiId": { "Ref" : "dataApi" },
            "resourceId": { "Ref" : "dataApiExchangetoken" },
            "method": {
                "authorizationType": "CUSTOM",
                "authorizerId" : {"Ref" : "authJwt"},
                "httpMethod": "POST",
                "parameters" : ["header.Authorization"]
            },
            "integration": {
                "type": "AWS",
                "httpMethod" : "POST",
                "requestTemplates" : {
                    "application/json" : {
                      "Authorization" : "$input.params().header.get('Authorization')"
                    }
                },
                "uri" : { "Fn::Join" :  [ "", [ "arn:aws:apigateway:",{ "Ref" : "AWS::Region" },":lambda:path/2015-03-31/functions/", "arn:aws:lambda:",{ "Ref" : "AWS::Region" },":", { "Ref" : "AWS::AccountId" } , ":function:", { "Ref" : "exchangetoken" }, "/invocations" ] ]}
            },
            "responses": {
                "default": {
                    "statusCode": "200"
                }
            }
        }
    },
    "dataApiExchangeTokenPermission": {
        "Type" : "AWS::Lambda::Permission",
        "Properties" : {
            "Action":"lambda:invokeFunction",
            "FunctionName": { "Fn::Join" :  [ "", [ "arn:aws:lambda:",{ "Ref" : "AWS::Region" },":", { "Ref" : "AWS::AccountId" } , ":function:", { "Ref" : "exchangetoken" } ] ]},
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
                "Fn::Join": ["", [
                    "arn:aws:execute-api:", {"Ref" : "AWS::Region" } ,":", {"Ref" : "AWS::AccountId" }, ":", {"Ref" : "dataApi" },
                     "/*/POST/exchangetoken"]]
                    }
        },
        "DependsOn" : "dataApi"
    },
    "dataApiHook" : {
      "Type" : "Custom::ApiResource",
      "Properties" : {
          "ServiceToken": { "Ref": "CFApiGatewayARN" },
          "restApiId": { "Ref" : "dataApi" },
          "parentId": { "Fn::GetAtt" : ["dataApi", "parentResourceId"] },
          "pathPart": "hook"
      }
    },
    "dataApiHookPOST" : {
        "Type" : "Custom::ApiMethod",
        "Properties" : {
            "ServiceToken": { "Ref": "CFApiGatewayARN" },
            "restApiId": { "Ref" : "dataApi" },
            "resourceId": { "Ref" : "dataApiHook" },
            "method": {
                "authorizationType": "NONE",
                "httpMethod": "POST",
                "parameters" : []
            },
            "integration": {
                "type": "AWS",
                "httpMethod" : "POST",
                "uri" : { "Fn::Join" :  [ "", [ "arn:aws:apigateway:",{ "Ref" : "AWS::Region" },":lambda:path/2015-03-31/functions/", "arn:aws:lambda:",{ "Ref" : "AWS::Region" },":", { "Ref" : "AWS::AccountId" } , ":function:", { "Ref" : "acceptWebhook" }, "/invocations" ] ]}
            },
            "responses": {
                "default": {
                    "statusCode": "200"
                }
            }
        }
    },
    "dataApiHookPermission": {
        "Type" : "AWS::Lambda::Permission",
        "Properties" : {
            "Action":"lambda:invokeFunction",
            "FunctionName": { "Fn::Join" :  [ "", [ "arn:aws:lambda:",{ "Ref" : "AWS::Region" },":", { "Ref" : "AWS::AccountId" } , ":function:", { "Ref" : "acceptWebhook" } ] ]},
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
                "Fn::Join": ["", [
                    "arn:aws:execute-api:", {"Ref" : "AWS::Region" } ,":", {"Ref" : "AWS::AccountId" }, ":", {"Ref" : "dataApi" },
                     "/*/POST/hook"]]
                    }
        },
        "DependsOn" : "dataApi"
    },
    "dataApiData" : {
      "Type" : "Custom::ApiResource",
      "Properties" : {
          "ServiceToken": { "Ref": "CFApiGatewayARN" },
          "restApiId": { "Ref" : "dataApi" },
          "parentId": { "Fn::GetAtt" : ["dataApi", "parentResourceId"] },
          "pathPart": "data"
      }
    },
    "dataApiLatest" : {
      "Type" : "Custom::ApiResource",
      "Properties" : {
          "ServiceToken": { "Ref": "CFApiGatewayARN" },
          "restApiId": { "Ref" : "dataApi" },
          "parentId": { "Ref" : "dataApiData" },
          "pathPart": "latest"
      }
    },
    "dataApiDataset" : {
      "Type" : "Custom::ApiResource",
      "Properties" : {
          "ServiceToken": { "Ref": "CFApiGatewayARN" },
          "restApiId": { "Ref" : "dataApi" },
          "parentId": { "Ref" : "dataApiLatest" },
          "pathPart": "{dataset}"
      }
    },
    "dataApiAcc" : {
      "Type" : "Custom::ApiResource",
      "Properties" : {
          "ServiceToken": { "Ref": "CFApiGatewayARN" },
          "restApiId": { "Ref" : "dataApi" },
          "parentId": { "Ref" : "dataApiDataset" },
          "pathPart": "{acc}"
      }
    },
    "dataApiAccGET" : {
        "Type" : "Custom::ApiMethod",
        "Properties" : {
            "ServiceToken": { "Ref": "CFApiGatewayARN" },
            "restApiId": { "Ref" : "dataApi" },
            "resourceId": { "Ref" : "dataApiAcc" },
            "method": {
                "authorizationType": "CUSTOM",
                "authorizerId" : {"Ref" : "authJwtData"},
                "httpMethod": "GET",
                "parameters" : ["header.Authorization","path.dataset","path.acc"]
            },
            "integration": {
                "type": "AWS",
                "httpMethod" : "GET",
                "credentials" : {"Fn::Join" : ["",["arn:aws:iam::", { "Ref" : "AWS::AccountId" } ,":role/", {"Ref" : "LambdaReadAllDataRole"} ]]},
                "requestParameters" : {
                                        "integration.request.path.dataset" : "method.request.path.dataset",
                                        "integration.request.path.acc" : "method.request.path.acc"
                                      },
                "uri" : { "Fn::Join" :  [ "", [ "arn:aws:apigateway:",{ "Ref" : "AWS::Region" },":s3:path/",{"Ref" : "dataBucket"},"/data/latest/{dataset}/{acc}" ] ]}
            },
            "responses": {
                "default": {
                    "statusCode": "200"
                }
            }
        }
    },
    "dataApiCombined" : {
      "Type" : "Custom::ApiResource",
      "Properties" : {
          "ServiceToken": { "Ref": "CFApiGatewayARN" },
          "restApiId": { "Ref" : "dataApi" },
          "parentId": { "Ref" : "dataApiLatest" },
          "pathPart": "combined"
      }
    },
    "dataApiCombinedAcc" : {
      "Type" : "Custom::ApiResource",
      "Properties" : {
          "ServiceToken": { "Ref": "CFApiGatewayARN" },
          "restApiId": { "Ref" : "dataApi" },
          "parentId": { "Ref" : "dataApiCombined" },
          "pathPart": "{acc}",
          "corsConfiguration": {
              "allowMethods": ["GET"],
              "allowHeaders": [],
              "allowDefaultHeaders": true,
              "allowOrigin": "*",
              "exposeHeaders": [],
              "maxAge": 1800,
              "allowCredentials": true
          }
      }
    },
    "dataApiCombinedAccGET" : {
        "Type" : "Custom::ApiMethod",
        "Properties" : {
            "ServiceToken": { "Ref": "CFApiGatewayARN" },
            "restApiId": { "Ref" : "dataApi" },
            "resourceId": { "Ref" : "dataApiCombinedAcc" },
            "method": {
                "authorizationType": "CUSTOM",
                "authorizerId" : {"Ref" : "authJwtData"},
                "httpMethod": "GET",
                "parameters" : ["header.Authorization","path.acc"]
            },
            "integration": {
                "type": "AWS",
                "httpMethod" : "POST",
                "requestTemplates" : {
                    "application/json" : {
                      "authorizationToken" : "$input.params().header.get('Authorization')",
                      "acc" : "$input.params('acc')"
                    }
                },
                "uri" : { "Fn::Join" :  [ "", [ "arn:aws:apigateway:",{ "Ref" : "AWS::Region" },":lambda:path/2015-03-31/functions/", "arn:aws:lambda:",{ "Ref" : "AWS::Region" },":", { "Ref" : "AWS::AccountId" } , ":function:", { "Ref" : "readAllData" }, "/invocations" ] ]}
            },
            "responses": {
                "default": {
                    "statusCode": "200"
                }
            }
        }
    },
    "dataApiCombinedAccPermission": {
        "Type" : "AWS::Lambda::Permission",
        "Properties" : {
            "Action":"lambda:invokeFunction",
            "FunctionName": { "Fn::Join" :  [ "", [ "arn:aws:lambda:",{ "Ref" : "AWS::Region" },":", { "Ref" : "AWS::AccountId" } , ":function:", { "Ref" : "readAllData" } ] ]},
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
                "Fn::Join": ["", [
                    "arn:aws:execute-api:", {"Ref" : "AWS::Region" } ,":", {"Ref" : "AWS::AccountId" }, ":", {"Ref" : "dataApi" },
                     "/*/GET/data/latest/combined/{acc}"]]
                    }
        },
        "DependsOn" : "dataApi"
    },
    "dataApiTools" : {
      "Type" : "Custom::ApiResource",
      "Properties" : {
          "ServiceToken": { "Ref": "CFApiGatewayARN" },
          "restApiId": { "Ref" : "dataApi" },
          "parentId": { "Fn::GetAtt" : ["dataApi", "parentResourceId"] },
          "pathPart": "tools"
      }
    },
    "dataApiClustal" : {
      "Type" : "Custom::ApiResource",
      "Properties" : {
          "ServiceToken": { "Ref": "CFApiGatewayARN" },
          "restApiId": { "Ref" : "dataApi" },
          "parentId": { "Ref" : "dataApiTools" },
          "pathPart": "clustal"
      }
    },
    "dataApiClustalPOST" : {
        "Type" : "Custom::ApiMethod",
        "Properties" : {
            "ServiceToken": { "Ref": "CFApiGatewayARN" },
            "restApiId": { "Ref" : "dataApi" },
            "resourceId": { "Ref" : "dataApiClustal" },
            "method": {
                "authorizationType": "NONE",
                "httpMethod" : "POST"
            },
            "integration": {
                "type": "AWS",
                "httpMethod" : "POST",
                "requestTemplates" : {
                    "application/json" : {
                      "sequences" : "$util.escapeJavaScript($input.body)"
                    }
                },
                "uri" : { "Fn::Join" :  [ "", [ "arn:aws:apigateway:",{ "Ref" : "AWS::Region" },":lambda:path/2015-03-31/functions/", "arn:aws:lambda:",{ "Ref" : "AWS::Region" },":", { "Ref" : "AWS::AccountId" } , ":function:", { "Ref" : "clustal" }, "/invocations" ] ]}
            },
            "responses": {
                "default": {
                    "statusCode": "200"
                }
            }
        }
    },
    "dataApiClustalPermission": {
        "Type" : "AWS::Lambda::Permission",
        "Properties" : {
            "Action":"lambda:invokeFunction",
            "FunctionName": { "Fn::Join" :  [ "", [ "arn:aws:lambda:",{ "Ref" : "AWS::Region" },":", { "Ref" : "AWS::AccountId" } , ":function:", { "Ref" : "clustal" } ] ]},
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
                "Fn::Join": ["", [
                    "arn:aws:execute-api:", {"Ref" : "AWS::Region" } ,":", {"Ref" : "AWS::AccountId" }, ":", {"Ref" : "dataApi" },
                     "/*/POST/tools/clustal"]]
                    }
        },
        "DependsOn" : "dataApi"
    },
    "authJwt" : {
      "Type" : "Custom::ApiAuthorizer",
      "Properties" : {
          "ServiceToken": { "Ref": "CFApiGatewayARN" },
          "restApiId": { "Ref" : "dataApi" },
          "authorizerUri": { "Fn::Join" :  [ "", [ "arn:aws:apigateway:",{ "Ref" : "AWS::Region" },":lambda:path/2015-03-31/functions/", "arn:aws:lambda:",{ "Ref" : "AWS::Region" },":", { "Ref" : "AWS::AccountId" } , ":function:", { "Ref" : "loginhandler" }, "/invocations" ] ]},
          "identitySource": "method.request.header.Authorization",
          "name": "authJwt",
          "authorizerResultTtlInSeconds": 300,
          "identityValidationExpression": "Bearer [^\\.]+\\.[^\\.]+\\.[^\\.]+"
      }
    },
    "authJwtPermission": {
        "Type" : "AWS::Lambda::Permission",
        "Properties" : {
            "Action":"lambda:invokeFunction",
            "FunctionName": { "Fn::Join" :  [ "", [ "arn:aws:lambda:",{ "Ref" : "AWS::Region" },":", { "Ref" : "AWS::AccountId" } , ":function:", { "Ref" : "loginhandler" } ] ]},
            "Principal": "apigateway.amazonaws.com"
        },
        "DependsOn" : "dataApi"
    },
    "authJwtData" : {
      "Type" : "Custom::ApiAuthorizer",
      "Properties" : {
          "ServiceToken": { "Ref": "CFApiGatewayARN" },
          "restApiId": { "Ref" : "dataApi" },
          "authorizerUri": { "Fn::Join" :  [ "", [ "arn:aws:apigateway:",{ "Ref" : "AWS::Region" },":lambda:path/2015-03-31/functions/", "arn:aws:lambda:",{ "Ref" : "AWS::Region" },":", { "Ref" : "AWS::AccountId" } , ":function:", { "Ref" : "datahandler" }, "/invocations" ] ]},
          "identitySource": "method.request.header.Authorization",
          "name": "authJwtData",
          "authorizerResultTtlInSeconds": 0,
          "identityValidationExpression": "Bearer [^\\.]+\\.[^\\.]+\\.[^\\.]+"
      }
    },
    "authJwtDataPermission": {
        "Type" : "AWS::Lambda::Permission",
        "Properties" : {
            "Action":"lambda:invokeFunction",
            "FunctionName": { "Fn::Join" :  [ "", [ "arn:aws:lambda:",{ "Ref" : "AWS::Region" },":", { "Ref" : "AWS::AccountId" } , ":function:", { "Ref" : "datahandler" } ] ]},
            "Principal": "apigateway.amazonaws.com"
        },
        "DependsOn" : "dataApi"
    }
  },
  "Outputs": {
  }
}
