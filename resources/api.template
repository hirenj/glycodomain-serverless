{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters" : {
    "CFApiGatewayARN" : {
      "Type" : "String",
      "Default" : "",
      "Description" : "Enter ARN for API gateway lambda"
    },
    "datahandler" : {
      "Type" : "String",
      "Description" : "Enter function name for dataHandler function"
    },
    "loginhandler" : {
      "Type" : "String",
      "Description" : "Enter function name for loginhandler function"
    },
    "exchangetoken" : {
      "Type" : "String",
      "Description" : "Enter function name for exchangetoken function"
    }
  },
  "Resources": {
    "dataApi" : {
        "Type" : "Custom::RestApi",
        "Properties" : {
            "ServiceToken": { "Ref": "CFApiGatewayARN" },
            "name": "Gatordata API",
            "description": "Gator data API"
        }
    },
    "dataApiLogin" : {
      "Type" : "Custom::ApiResource",
      "Properties" : {
          "ServiceToken": { "Ref": "CFApiGatewayARN" },
          "restApiId": { "Ref" : "dataApi" },
          "parentId": { "Fn::GetAtt" : ["dataApi", "parentResourceId"] },
          "pathPart": "login",
          "corsConfiguration": {
              "allowMethods": ["GET"],
              "allowHeaders": [],
              "allowDefaultHeaders": true,
              "allowOrigin": "*",
              "exposeHeaders": [],
              "maxAge": 1800,
              "allowCredentials": false
           }
      }
    },
    "dataApiLoginGET" : {
        "Type" : "Custom::ApiMethod",
        "Properties" : {
            "ServiceToken": { "Ref": "CFApiGatewayARN" },
            "restApiId": { "Ref" : "dataApi" },
            "resourceId": { "Ref" : "dataApiLogin" },
            "method": {
                "authorizationType": "NONE",
                "httpMethod": "GET"
            },
            "integration": {
                "type": "AWS",
                "httpMethod" : "POST",
                "credentials" : { "Fn::Join" : ["",["arn:aws:iam::",{ "Ref" : "AWS::AccountId" },":role/test-LambdaExchangetokenRole-1CS98XZ1X1ETJ"]]},
                "uri" : { "Fn::Join" :  [ "", [ "arn:aws:apigateway:",{ "Ref" : "AWS::Region" },":lambda:path/2015-03-31/functions/", "arn:aws:lambda:",{ "Ref" : "AWS::Region" },":", { "Ref" : "AWS::AccountId" } , ":function:", { "Ref" : "exchangetoken" }, "/invocations" ] ]}
            },
            "responses": {
                "default": {
                    "statusCode": "200"
                }
            }
        }
    },
    "dataApiExchangetoken" : {
      "Type" : "Custom::ApiResource",
      "Properties" : {
          "ServiceToken": { "Ref": "CFApiGatewayARN" },
          "restApiId": { "Ref" : "dataApi" },
          "parentId": { "Fn::GetAtt" : ["dataApi", "parentResourceId"] },
          "pathPart": "exchangetoken"
      }
    },
    "dataApiData" : {
      "Type" : "Custom::ApiResource",
      "Properties" : {
          "ServiceToken": { "Ref": "CFApiGatewayARN" },
          "restApiId": { "Ref" : "dataApi" },
          "parentId": { "Fn::GetAtt" : ["dataApi", "parentResourceId"] },
          "pathPart": "data"
      }
    },
    "dataApiLatest" : {
      "Type" : "Custom::ApiResource",
      "Properties" : {
          "ServiceToken": { "Ref": "CFApiGatewayARN" },
          "restApiId": { "Ref" : "dataApi" },
          "parentId": { "Ref" : "dataApiData" },
          "pathPart": "latest"
      }
    },
    "dataApiDataset" : {
      "Type" : "Custom::ApiResource",
      "Properties" : {
          "ServiceToken": { "Ref": "CFApiGatewayARN" },
          "restApiId": { "Ref" : "dataApi" },
          "parentId": { "Ref" : "dataApiLatest" },
          "pathPart": "{dataset}"
      }
    },
    "dataApiAcc" : {
      "Type" : "Custom::ApiResource",
      "Properties" : {
          "ServiceToken": { "Ref": "CFApiGatewayARN" },
          "restApiId": { "Ref" : "dataApi" },
          "parentId": { "Ref" : "dataApiDataset" },
          "pathPart": "{acc}"
      }
    },
    "authJwt" : {
      "Type" : "Custom::ApiAuthorizer",
      "Properties" : {
          "ServiceToken": { "Ref": "CFApiGatewayARN" },
          "restApiId": { "Ref" : "dataApi" },
          "authorizerUri": { "Fn::Join" :  [ "", [ "arn:aws:apigateway:",{ "Ref" : "AWS::Region" },":lambda:path/2015-03-31/functions/", "arn:aws:lambda:",{ "Ref" : "AWS::Region" },":", { "Ref" : "AWS::AccountId" } , ":function:", { "Ref" : "loginhandler" }, "/invocations" ] ]},
          "identitySource": "method.request.header.Authorization",
          "name": "authJwt",
          "authorizerResultTtlInSeconds": 300,
          "identityValidationExpression": "Bearer [^\\.]+\\.[^\\.]+\\.[^\\.]+"
      }
    },
    "authJwtData" : {
      "Type" : "Custom::ApiAuthorizer",
      "Properties" : {
          "ServiceToken": { "Ref": "CFApiGatewayARN" },
          "restApiId": { "Ref" : "dataApi" },
          "authorizerUri": { "Fn::Join" :  [ "", [ "arn:aws:apigateway:",{ "Ref" : "AWS::Region" },":lambda:path/2015-03-31/functions/", "arn:aws:lambda:",{ "Ref" : "AWS::Region" },":", { "Ref" : "AWS::AccountId" } , ":function:", { "Ref" : "datahandler" }, "/invocations" ] ]},
          "identitySource": "method.request.header.Authorization",
          "name": "authJwtData",
          "authorizerResultTtlInSeconds": 0,
          "identityValidationExpression": "Bearer [^\\.]+\\.[^\\.]+\\.[^\\.]+"
      }
    }
  },
  "Outputs": {
  }
}