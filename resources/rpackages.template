{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters" : {
  },
  "Resources": {
    "authRdatasethandler": {
      "Type": "AWS::ApiGateway::Authorizer",
      "Properties": {
        "AuthorizerResultTtlInSeconds": "300",
        "AuthorizerUri" : { "Fn::Join" :  [ "", [ "arn:aws:apigateway:",{ "Ref" : "AWS::Region" },":lambda:path/2015-03-31/functions/", "arn:aws:lambda:",{ "Ref" : "AWS::Region" },":", { "Ref" : "AWS::AccountId" } , ":function:", { "Ref" : "rdatasethandler" }, "/invocations" ] ]},
        "Type": "TOKEN",
        "IdentityValidationExpression" : ".+",
        "IdentitySource": "method.request.header.Auth",
        "Name": "Rdataset_access_authoriser",
        "RestApiId": { "Ref": "dataApi" }
      }
    },
    "authRdatasethandlerPermission": {
        "Type" : "AWS::Lambda::Permission",
        "Properties" : {
            "Action":"lambda:invokeFunction",
            "FunctionName": { "Fn::Join" :  [ "", [ "arn:aws:lambda:",{ "Ref" : "AWS::Region" },":", { "Ref" : "AWS::AccountId" } , ":function:", { "Ref" : "rdatasethandler" } ] ]},
            "Principal": "apigateway.amazonaws.com"
        }
    },
    "dataApiRepository" : {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": { "Ref": "dataApi" },
        "ParentId": { "Fn::GetAtt": ["dataApi", "RootResourceId"] },
        "PathPart": "repository"
      }
    },
    "dataApiRepositoryToken" : {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": { "Ref": "dataApi" },
        "ParentId": { "Ref" : "dataApiRepository" },
        "PathPart": "token"
      }
    },
    "dataApiRepositoryTokenToken" : {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": { "Ref": "dataApi" },
        "ParentId": { "Ref" : "dataApiRepositoryToken" },
        "PathPart": "{token}"
      }
    },
    "dataApiRepositoryTokenTokenSrc" : {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": { "Ref": "dataApi" },
        "ParentId": { "Ref" : "dataApiRepositoryTokenToken" },
        "PathPart": "src"
      }
    },
    "dataApiRepositoryTokenTokenSrcContrib" : {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": { "Ref": "dataApi" },
        "ParentId": { "Ref" : "dataApiRepositoryTokenTokenSrc" },
        "PathPart": "contrib"
      }
    },
    "dataApiRepositoryTokenTokenSrcContribPackages" : {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": { "Ref": "dataApi" },
        "ParentId": { "Ref" : "dataApiRepositoryTokenTokenSrcContrib" },
        "PathPart": "PACKAGES"
      }
    },
    "dataApiRepositoryTokenTokenSrcContribPackagesGz" : {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": { "Ref": "dataApi" },
        "ParentId": { "Ref" : "dataApiRepositoryTokenTokenSrcContrib" },
        "PathPart": "PACKAGES.gz"
      }
    },
    "dataApiRepositoryTokenTokenSrcContribPackagesGET": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": { "Ref": "dataApi" },
        "ResourceId": { "Ref" : "dataApiRepositoryTokenTokenSrcContribPackages" },
        "HttpMethod": "GET",
        "AuthorizationType": "NONE",
        "RequestParameters" : { 
            "method.request.path.token" : true
        },
        "Integration": {
          "Type": "HTTP",
          "IntegrationHttpMethod" : "POST",
          "PassthroughBehavior" : "WHEN_NO_MATCH",
          "RequestTemplates" : {},
          "RequestParameters" : {
            "integration.request.header.Accept" : "'application/json'",
            "integration.request.header.Auth" : "method.request.path.token",
            "integration.request.path.path" : "'PACKAGES'"
          },
          "IntegrationResponses" : [
          {
            "ResponseParameters" : {
              "method.response.header.Content-Type": "'text/plain'"
            },
            "ResponseTemplates" : {},
            "StatusCode" : 200
          }],
          "Uri" : { "Fn::Join" :  [ "", [ "https://",{"Ref" : "dataApi"}, ".execute-api.",{ "Ref" : "AWS::Region" },".amazonaws.com/api/repository/src/contrib/{path}" ] ]}
        },
        "MethodResponses" : [{
          "StatusCode" : 200,
          "ResponseParameters": {
            "method.response.header.Content-Type": true
          }
        }]
      }
    },
    "dataApiRepositoryTokenTokenSrcContribPackagesGzGET": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": { "Ref": "dataApi" },
        "ResourceId": { "Ref" : "dataApiRepositoryTokenTokenSrcContribPackagesGz" },
        "HttpMethod": "GET",
        "AuthorizationType": "NONE",
        "RequestParameters" : { 
            "method.request.path.token" : true
        },
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates" : { "application/json" : "{ \"statusCode\" : 403 }"},
          "IntegrationResponses" : [
          {
            "ResponseParameters": {},
            "ResponseTemplates": {},
            "SelectionPattern" : ".*",
            "StatusCode" : 403
          }]
        },
        "MethodResponses" : [{"StatusCode" : 403 }]
      }
    },
    "dataApiRepositoryTokenTokenSrcContribPath" : {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": { "Ref": "dataApi" },
        "ParentId": { "Ref" : "dataApiRepositoryTokenTokenSrcContrib" },
        "PathPart": "{path+}"
      }
    },
    "dataApiRepositoryTokenTokenSrcContribPathGET": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": { "Ref": "dataApi" },
        "ResourceId": { "Ref" : "dataApiRepositoryTokenTokenSrcContribPath" },
        "HttpMethod": "GET",
        "AuthorizationType": "NONE",
        "RequestParameters" : { 
            "method.request.path.token" : true,
            "method.request.path.path" : true
        },
        "Integration": {
          "Type": "HTTP",
          "IntegrationHttpMethod" : "POST",
          "PassthroughBehavior" : "WHEN_NO_MATCH",
          "RequestTemplates" : {},
          "RequestParameters" : {
            "integration.request.header.Accept" : "'application/octet-stream'",
            "integration.request.header.Auth" : "method.request.path.token",
            "integration.request.path.path" : "method.request.path.path"
          },
          "IntegrationResponses" : [
          {
            "ResponseParameters" : {},
            "ResponseTemplates" : {},
            "StatusCode" : 200
          }],
          "Uri" : { "Fn::Join" :  [ "", [ "https://",{"Ref" : "dataApi"}, ".execute-api.",{ "Ref" : "AWS::Region" },".amazonaws.com/api/repository/src/contrib/{path}" ] ]}
        },
        "MethodResponses" : [{"StatusCode" : 200 }]
      }
    },
    "dataApiRepositoryTokenTokenSrcContribPathHEAD": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": { "Ref": "dataApi" },
        "ResourceId": { "Ref" : "dataApiRepositoryTokenTokenSrcContribPath" },
        "HttpMethod": "HEAD",
        "AuthorizationType": "NONE",
        "RequestParameters" : {
            "method.request.path.token" : true,
            "method.request.path.path" : true
        },
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates" : { "application/json" : "{ \"statusCode\" : 200 }"},
          "IntegrationResponses" : [
          {
            "ResponseParameters" : {},
            "ResponseTemplates" : {},
            "StatusCode" : 200
          }]
        },
        "MethodResponses" : [{"StatusCode" : 200 }]
      }
    },
    "dataApiRepositorySrcContribPath" : {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": { "Ref": "dataApi" },
        "ParentId": { "Ref" : "dataApiRepositorySrcContrib" },
        "PathPart": "{path+}"
      }
    },
    "dataApiRepositorySrcContribPathPOST": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": { "Ref": "dataApi" },
        "ResourceId": { "Ref" : "dataApiRepositorySrcContribPath" },
        "HttpMethod": "POST",
        "AuthorizationType": "CUSTOM",
        "AuthorizerId" : { "Ref" : "authRdatasethandler" },
        "RequestParameters" : {
            "method.request.path.path" : true
        },
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod" : "GET",
          "PassthroughBehavior" : "WHEN_NO_MATCH",
          "Credentials" : {"Fn::GetAtt" : ["ReadRDatasetsRole", "Arn"] },
          "RequestTemplates" : {},
          "RequestParameters" : {
            "integration.request.path.path" : "method.request.path.path"
          },
          "IntegrationResponses" : [
          {
            "ResponseParameters" : {},
            "ResponseTemplates" : {},
            "StatusCode" : 200
          }],
          "Uri" : { "Fn::Join" :  [ "", [ "arn:aws:apigateway:",{"Ref":"AWS::Region"},":s3:path/", {"Ref":"AWS::StackName"} ,"-gator/rdata/{path}" ] ] }
        },
        "MethodResponses" : [{"StatusCode" : 200 }]
      }
    },
    "dataApiRepositoryTokenTokenSrcContribPackagesHEAD": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": { "Ref": "dataApi" },
        "ResourceId": { "Ref" : "dataApiRepositoryTokenTokenSrcContribPackages" },
        "HttpMethod": "HEAD",
        "AuthorizationType": "NONE",
        "RequestParameters" : {
            "method.request.path.token" : true,
            "method.request.path.path" : true
        },
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates" : { "application/json" : "{ \"statusCode\" : 200 }"},
          "IntegrationResponses" : [
          {
            "ResponseParameters" : {},
            "ResponseTemplates" : {},
            "SelectionPattern" : ".*",
            "StatusCode" : 200
          }]
        },
        "MethodResponses" : [{"StatusCode" : 200 }]
      }
    },
    "dataApiRepositoryTokenTokenSrcContribPackagesGzHEAD": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": { "Ref": "dataApi" },
        "ResourceId": { "Ref" : "dataApiRepositoryTokenTokenSrcContribPackagesGz" },
        "HttpMethod": "HEAD",
        "AuthorizationType": "NONE",
        "RequestParameters" : {
            "method.request.path.token" : true,
            "method.request.path.path" : true
        },
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates" : { "application/json" : "{ \"statusCode\" : 403 }"},
          "IntegrationResponses" : [
          {
            "ResponseParameters" : {},
            "ResponseTemplates" : {},
            "SelectionPattern" : ".*",
            "StatusCode" : 403
          }]
        },
        "MethodResponses" : [{"StatusCode" : 403 }]
      }
    },
    "dataApiRepositorySrc" : {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": { "Ref": "dataApi" },
        "ParentId": { "Ref" : "dataApiRepository" },
        "PathPart": "src"
      }
    },
    "dataApiRepositorySrcContrib" : {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": { "Ref": "dataApi" },
        "ParentId": { "Ref" : "dataApiRepositorySrc" },
        "PathPart": "contrib"
      }
    },
    "dataApiRepositorySrcContribPACKAGES" : {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": { "Ref": "dataApi" },
        "ParentId": { "Ref" : "dataApiRepositorySrcContrib" },
        "PathPart": "PACKAGES"
      }
    },
    "dataApiRepositorySrcContribPACKAGESPOST": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": { "Ref": "dataApi" },
        "ResourceId": { "Ref" : "dataApiRepositorySrcContribPACKAGES" },
        "HttpMethod": "POST",
        "AuthorizationType": "CUSTOM",
        "AuthorizerId" : { "Ref" : "authRdatasethandler" },
        "RequestParameters" : {
            "method.request.path.path" : true,
            "method.request.header.Auth" : true
        },
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod" : "POST",
          "PassthroughBehavior" : "WHEN_NO_MATCH",
          "RequestParameters" : {},
          "RequestTemplates" : { "application/json" : "{ \"Authorization\" : \"$input.params().header.get('Auth')\", \n \"acc\" : \"publications\",\n  \"grants\" : \"$util.escapeJavaScript($context.authorizer.principalId)\" }"},
          "IntegrationResponses" : [
          {
            "ResponseParameters" : {},
            "ResponseTemplates" : { "application/json" : "#set($data = $input.path('$.data'))\n#set($packages = [])\n#set($has_rdata = false)\n#set($grants = $util.parseJson($context.authorizer.principalId))\n#set($grants_full = $grants['data-feature/full_rdata'])\n#set($grants_partial = $grants['data-feature/partial_rdata'])\n#if(\"$grants_partial\" != \"\" || \"$grants_full\" != \"\")\n#set($has_rdata = true)\n#end\n#if(\"$grants_partial\" != \"\")\n#set($rdata_prefix = 'partial_')\n#end\n#if(\"$grants_full\" != \"\")\n#set($rdata_prefix = '')\n#end\n#foreach($set in $data)\n#set($idx = $velocityCount - 1)\n#if($has_rdata == true && \"$data[$idx].metadata.rpackage\" != \"\")\n#set($foo = $packages.add($data[$idx].metadata.rpackage))\nPackage: $data[$idx].metadata.rpackage.split('_')[0]\nFile: $rdata_prefix$data[$idx].metadata.rpackage\nVersion: $data[$idx].metadata.rpackage.split('_')[1]\nNeedsCompilation: no\n\n#end\n#end\n#set($now = $input.path('$.retrieved'))\n#set($today = $now.split('T')[0])\nPackage: gatordata\nFile: gatordata.tar.gz\nVersion: $today.replace('-','.')\nNeedsCompilation: no\nImports:\n#foreach($set in $packages)\n#set($idx = $velocityCount - 1)\n    $set.split('_')[0] (>= $set.split('_')[1]) #if($velocityCount < ${packages.size()}),#end\n#end" },
            "StatusCode" : 200
          }],
          "Uri" : { "Fn::Join" :  [ "", [ "arn:aws:apigateway:",{ "Ref" : "AWS::Region" },":lambda:path/2015-03-31/functions/", "arn:aws:lambda:",{ "Ref" : "AWS::Region" },":", { "Ref" : "AWS::AccountId" } , ":function:", { "Ref" : "readAllData" }, "/invocations" ] ]}
        },
        "MethodResponses" : [{"StatusCode" : 200 }]
      }
    },
    "dataApiRepositorySrcContribPACKAGESPOSTPermission": {
        "Type" : "AWS::Lambda::Permission",
        "Properties" : {
            "Action":"lambda:invokeFunction",
            "FunctionName": { "Fn::Join" :  [ "", [ "arn:aws:lambda:",{ "Ref" : "AWS::Region" },":", { "Ref" : "AWS::AccountId" } , ":function:", { "Ref" : "readAllData" } ] ]},
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
                "Fn::Join": ["", [
                    "arn:aws:execute-api:", {"Ref" : "AWS::Region" } ,":", {"Ref" : "AWS::AccountId" }, ":", {"Ref" : "dataApi" },
                     "/*/POST/repository/src/contrib/PACKAGES"]]
                    }
        }
    },
    "ReadRDatasetsRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns" : [{ "Ref" : "ReadRDatasets" }],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      }
    }
  }
}